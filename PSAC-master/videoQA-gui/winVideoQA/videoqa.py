# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'videoqa.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import QApplication
from PyQt5.QtMultimediaWidgets import QVideoWidget

op = QtWidgets.QGraphicsOpacityEffect()
# 设置透明度的值，0.0到1.0，最小值0是透明，1是不透明
op.setOpacity(0.8)

class Ui_MainWindow(object):
    #窗体组件搭建
    def setupUi(self, MainWindow):
        #主窗口
        MainWindow.setObjectName("MainWindow")
        # 根据屏幕尺寸调整主窗口大小
        #获取屏幕
        desttop = QApplication.desktop()
        #获取屏幕的宽度
        desttopWidth = desttop.width()
        #获取屏幕的高度
        desttopHeight = desttop.height()
        #窗口的宽度
        mainWindowWidth=desttopWidth*0.7
        #窗口的高度
        mainWindowHeight=desttopHeight*0.8
        MainWindow.resize(mainWindowWidth, mainWindowHeight)
        #主窗口字体
        font = QtGui.QFont()
        #字体格式
        font.setFamily("Times New Roman")
        MainWindow.setFont(font)
        #主窗口样式表修饰
        MainWindow.setStyleSheet("background-color: rgb(35, 36, 45);")
        # 取消主窗口边框
        MainWindow.setWindowFlags(Qt.FramelessWindowHint)

        #中心组件容器
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        #主窗口垂直布局
        self.mainWindowLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.mainWindowLayout.setObjectName("mainWindowLayout")

        #顶部操作功能容器
        self.operationContainer = QtWidgets.QHBoxLayout()
        #设置布局随窗口调整而改变大小
        self.operationContainer.setSizeConstraint(QtWidgets.QLayout.SetMinAndMaxSize)
        #容器中组件边距
        self.operationContainer.setContentsMargins(0, -1, -1, -1)
        #容器中组件空隙
        self.operationContainer.setSpacing(0)
        self.operationContainer.setObjectName("operationContainer")

        #顶部logo图标
        self.logo_label = QtWidgets.QLabel(self.centralwidget)
        #固定logo大小
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logo_label.sizePolicy().hasHeightForWidth())
        self.logo_label.setSizePolicy(sizePolicy)
        #logo字体
        font = QtGui.QFont()
        #字体格式
        font.setFamily("Times New Roman")
        #字体大小
        font.setPointSize(24)
        self.logo_label.setFont(font)
        #logo样式表
        self.logo_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.logo_label.setObjectName("logo_label")
        #布局注册组件
        self.operationContainer.addWidget(self.logo_label)

        #水平分隔条
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.operationContainer.addItem(spacerItem)

        #视频问答按钮
        self.videoQA_btn = QtWidgets.QPushButton(self.centralwidget)
        #设置按钮高度固定，宽度可调
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.videoQA_btn.sizePolicy().hasHeightForWidth())
        self.videoQA_btn.setSizePolicy(sizePolicy)
        #按钮字体
        font = QtGui.QFont()
        font.setPointSize(14)
        self.videoQA_btn.setFont(font)
        #取消按钮焦点
        self.videoQA_btn.setFocusPolicy(QtCore.Qt.NoFocus)
        #按钮样式表
        self.videoQA_btn.setStyleSheet("color: rgb(39, 176, 80);\n"
"background-color: rgb(35, 36, 45);\n"
"selection-background-color: rgb(53, 54, 66);")
        self.videoQA_btn.setObjectName("videoQA_btn")
        #布局注册组件
        self.operationContainer.addWidget(self.videoQA_btn)

        #目标选取按钮
        self.selectGoal_btn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectGoal_btn.sizePolicy().hasHeightForWidth())
        self.selectGoal_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.selectGoal_btn.setFont(font)
        self.selectGoal_btn.setStyleSheet("color: rgb(39, 176, 80);\n"
"background-color: rgb(35, 36, 45);\n"
"selection-background-color: rgb(53, 54, 66);")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/question.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.selectGoal_btn.setIcon(icon)
        self.selectGoal_btn.setObjectName("selectGoal_btn")
        self.operationContainer.addWidget(self.selectGoal_btn)

        #事件跟踪按钮
        self.eventLocate_btn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eventLocate_btn.sizePolicy().hasHeightForWidth())
        self.eventLocate_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.eventLocate_btn.setFont(font)
        self.eventLocate_btn.setFocusPolicy(QtCore.Qt.NoFocus)
        self.eventLocate_btn.setStyleSheet("color: rgb(39, 176, 80);\n"
"background-color: rgb(35, 36, 45);\n"
"selection-background-color: rgb(53, 54, 66);")
        self.eventLocate_btn.setMinimumSize(QtCore.QSize(136, 0))
        self.eventLocate_btn.setObjectName("eventLocate_btn")
        self.operationContainer.addWidget(self.eventLocate_btn)

        #水平分割条
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.operationContainer.addItem(spacerItem)

        #最小化窗口按钮
        self.hideWindow_btn = QtWidgets.QPushButton(self.centralwidget)
        #设置按钮可以随按钮中的图片而改变大小
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(30)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.hideWindow_btn.sizePolicy().hasHeightForWidth())
        self.hideWindow_btn.setSizePolicy(sizePolicy)
        self.hideWindow_btn.setMinimumSize(QtCore.QSize(0, 0))
        #设置按钮文本
        self.hideWindow_btn.setText("")
        #按钮图片
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("images/hideWindow.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.hideWindow_btn.setIcon(icon1)
        #按钮图片大小
        self.hideWindow_btn.setIconSize(QtCore.QSize(30, 30))
        self.hideWindow_btn.setObjectName("hideWindow_btn")
        #布局注册组件
        self.operationContainer.addWidget(self.hideWindow_btn)

        #关闭窗口按钮
        self.closeWindow_btn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.closeWindow_btn.sizePolicy().hasHeightForWidth())
        self.closeWindow_btn.setSizePolicy(sizePolicy)
        self.closeWindow_btn.setMinimumSize(QtCore.QSize(0, 0))
        self.closeWindow_btn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("images/closeWindow.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.closeWindow_btn.setIcon(icon2)
        self.closeWindow_btn.setIconSize(QtCore.QSize(30, 30))
        self.closeWindow_btn.setObjectName("closeWindow_btn")
        self.operationContainer.addWidget(self.closeWindow_btn)

        #设置顶部操作选项容器内各个组件所占的比例
        #使得这些组件不会随窗体大小改变而改变原有布局
        self.operationContainer.setStretch(0, 1)
        self.operationContainer.setStretch(2, 3)
        self.operationContainer.setStretch(3, 3)
        self.operationContainer.setStretch(5, 20)
        self.operationContainer.setStretch(6, 1)
        self.operationContainer.setStretch(7, 1)

        #主窗口布局注册顶部布局
        self.mainWindowLayout.addLayout(self.operationContainer)

        #下方展示容器
        self.showContainer = QtWidgets.QHBoxLayout()
        self.showContainer.setObjectName("showContainer")

        #下方展示容器中左侧问答列表容器
        self.qaContainer = QtWidgets.QVBoxLayout()
        self.qaContainer.setSpacing(32)
        self.qaContainer.setObjectName("qaContainer")

        #打开文件按钮
        self.openFile_btn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openFile_btn.sizePolicy().hasHeightForWidth())
        self.openFile_btn.setSizePolicy(sizePolicy)
        self.openFile_btn.setMinimumSize(QtCore.QSize(120, 40))
        self.openFile_btn.setMaximumSize(QtCore.QSize(120, 40))

        #按钮调色板
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.openFile_btn.setPalette(palette)
        #按钮样式表
        self.openFile_btn.setStyleSheet("font: 75 14pt \"Times New Roman\";\n"
"text-align:left;")
        self.openFile_btn.setObjectName("openFile_btn")
        self.qaContainer.addWidget(self.openFile_btn)

        # OE问题选择按钮
        self.oe_radiobtn = QtWidgets.QRadioButton(self.centralwidget)
        self.oe_radiobtn.setGeometry(QtCore.QRect(10, 150, 31, 121))
        self.oe_radiobtn.setMinimumSize(QtCore.QSize(120, 40))
        self.oe_radiobtn.setMaximumSize(QtCore.QSize(120, 40))
        self.oe_radiobtn.setChecked(True)
        self.oe_radiobtn.setObjectName("oe_radiobtn")
        self.oe_radiobtn.setStyleSheet("font: 75 14pt \"Times New Roman\";\n"
                                       "color: rgb(255, 255, 255);")
        op = QtWidgets.QGraphicsOpacityEffect()
        # 设置透明度的值，0.0到1.0，最小值0是透明，1是不透明
        op.setOpacity(0.8)
        self.oe_radiobtn.setGraphicsEffect(op)

        # MC问题选择按钮
        self.mc_radiobtn = QtWidgets.QRadioButton(self.centralwidget)
        self.mc_radiobtn.setGeometry(QtCore.QRect(150, 150, 31, 121))
        self.mc_radiobtn.setMinimumSize(QtCore.QSize(120, 40))
        self.mc_radiobtn.setMaximumSize(QtCore.QSize(120, 40))
        self.mc_radiobtn.setChecked(False)
        self.mc_radiobtn.setObjectName("mc_radiobtn")
        self.mc_radiobtn.setStyleSheet("font: 75 14pt \"Times New Roman\";\n"
                                          "color: rgb(255, 255, 255);")
        op = QtWidgets.QGraphicsOpacityEffect()
        # 设置透明度的值，0.0到1.0，最小值0是透明，1是不透明
        op.setOpacity(0.8)
        self.mc_radiobtn.setGraphicsEffect(op)

        #问题标签
        self.question_label = QtWidgets.QLabel(self.centralwidget)
        self.question_label.setMinimumSize(QtCore.QSize(100, 30))
        self.question_label.setMaximumSize(QtCore.QSize(100, 30))
        self.question_label.setStyleSheet("font: 75 14pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.question_label.setObjectName("question_label")
        self.qaContainer.addWidget(self.question_label)

        #问题输入框
        self.question_input = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.question_input.sizePolicy().hasHeightForWidth())
        self.question_input.setSizePolicy(sizePolicy)
        self.question_input.setMinimumSize(QtCore.QSize(0, 40))
        self.question_input.setMaximumSize(QtCore.QSize(16777215, 200))
        self.question_input.setStyleSheet("font: 14pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.question_input.setText("")
        self.question_input.setObjectName("question_input")
        self.qaContainer.addWidget(self.question_input)

        #回答问题按钮
        self.qa_btn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.qa_btn.sizePolicy().hasHeightForWidth())
        self.qa_btn.setSizePolicy(sizePolicy)
        self.qa_btn.setMinimumSize(QtCore.QSize(120, 40))
        self.qa_btn.setMaximumSize(QtCore.QSize(120, 40))
        #调色板
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(55, 55, 55))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 189, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.qa_btn.setPalette(palette)
        self.qa_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.qa_btn.setStyleSheet("font: 75 14pt \"Times New Roman\";\n"
"text-align:left;")
        self.qa_btn.setObjectName("qa_btn")
        self.qaContainer.addWidget(self.qa_btn)

        #答案标签
        self.answer_label = QtWidgets.QLabel(self.centralwidget)
        self.answer_label.setMinimumSize(QtCore.QSize(120, 40))
        self.answer_label.setMaximumSize(QtCore.QSize(120, 40))
        self.answer_label.setStyleSheet("font: 75 14pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.answer_label.setObjectName("answer_label")
        self.qaContainer.addWidget(self.answer_label)
        self.answer_text = QtWidgets.QTextEdit(self.centralwidget)
        self.answer_text.setMaximumSize(QtCore.QSize(16777215, 300))
        self.answer_text.setStyleSheet("font: 16pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.answer_text.setObjectName("answer_text")
        self.qaContainer.addWidget(self.answer_text)

        #下方展示容器注册左侧问答容器
        self.showContainer.addLayout(self.qaContainer)

        #播放视频容器
        self.playVideoContainer = QtWidgets.QVBoxLayout()
        self.playVideoContainer.setObjectName("playVideoContainer")

        # 添加widget
        self.videoWidget_container = QtWidgets.QWidget(self.centralwidget)
        self.videoWidget_container.setMinimumSize(mainWindowWidth*0.7,mainWindowHeight*0.8)
        self.videoWidget_container.setBaseSize(mainWindowWidth*0.7,mainWindowHeight*0.8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.videoWidget_container.sizePolicy().hasHeightForWidth())
        self.videoWidget_container.setSizePolicy(sizePolicy)
        self.videoWidget_container.setContentsMargins(0,0,0,0)
        self.videoWidget_container.setObjectName("videoWidget_container")

        # 视频播放组件,将videoWidget加入到widget中
        self.videoWidget = QVideoWidget(self.videoWidget_container)
        self.videoWidget.setGeometry(QtCore.QRect(0, 0, self.videoWidget_container.width()+self.videoWidget_container.width()*0.2, self.videoWidget_container.height()+self.videoWidget_container.height()*0.1))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.videoWidget.sizePolicy().hasHeightForWidth())
        self.videoWidget.setSizePolicy(sizePolicy)
        self.videoWidget.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.videoWidget.setObjectName("videoWidget")

        #当前播放视频名称标签
        self.currentMedia_label = QtWidgets.QLabel(self.videoWidget_container)
        self.currentMedia_label.setGeometry(QtCore.QRect(0, 0, 50, 39))
        self.currentMedia_label.setMinimumSize(QtCore.QSize(80, 30))
        self.currentMedia_label.setMaximumSize(QtCore.QSize(80, 30))
        self.currentMedia_label.setObjectName("currentMedia_label")
        self.currentMedia_label.setStyleSheet("color:white")

        # 隐藏左侧提问框
        self.hideLeft_btn = QtWidgets.QPushButton(self.videoWidget_container)
        self.hideLeft_btn.setGeometry(QtCore.QRect(0, 280, 31, 121))
        self.hideLeft_btn.setText("")
        self.hideLeft_btn.setObjectName("hideLeft_btn")
        # self.hideLeft_btn.

        icon_hideLeft = QtGui.QIcon()
        icon_hideLeft.addPixmap(QtGui.QPixmap("images/left.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.hideLeft_btn.setIcon(icon_hideLeft)

        # 将widget加入playVideoContainer
        self.playVideoContainer.addWidget(self.videoWidget_container)

        #视频播放进度条
        self.position_slider = QtWidgets.QSlider(self.centralwidget)
        #滑动条样式表
        self.position_slider.setStyleSheet("/* 整个拖动条的设置 */\n"
"\n"
"QSlider::groove{\n"
"\n"
"border: 1px solid #00ff00; /* 边框颜色 */\n"
"\n"
"height: 8px; /* 整体高度 */\n"
"\n"
"background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #c40000, stop:1 #c4c4c4);\n"
"\n"
"margin: 0px 0; /* 0px 设置已划过的地方高度, \"0\" 距离父控件的距离*/\n"
"\n"
"}\n"
"\n"
"/* 顶部拖动设计 */\n"
"\n"
"QSlider::handle{\n"
"\n"
"background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);\n"
"\n"
"border: 1px solid #5c5c5c; /*边框*/\n"
"\n"
"width: 18px;\n"
"\n"
"margin: -2px 0; /*滑块大小设置*/\n"
"\n"
"border-radius: 3px; /* 圆角设置 */\n"
"\n"
"background-color: #05B8CC;\n"
"\n"
"}\n"
"\n"
"\n"
"/* 未滑动的区域 */\n"
"\n"
"QSlider::add-page:horizontal\n"
"\n"
"{\n"
"\n"
"border-radius: 3px;\n"
"\n"
"height: 8px; /* 整体高度 */\n"
"\n"
"}\n"
"\n"
"\n"
"/* 已划过的设置*/\n"
"\n"
"QSlider::sub-page:horizontal\n"
"\n"
"{\n"
"\n"
"border: 1px solid #00ffFF; /* 边框颜色 */\n"
"\n"
"background:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #000000, stop:1 #0000FF); /* 颜色渐变*/\n"
"\n"
"border-radius: 3px;\n"
"\n"
"height: 8px; /* 整体高度 */\n"
"\n"
"}")
        #
        self.position_slider.setTracking(False)
        #设置滑动条方向
        self.position_slider.setOrientation(QtCore.Qt.Horizontal)
        self.position_slider.setObjectName("position_slider")
        self.playVideoContainer.addWidget(self.position_slider)

        #视频播放控制容器
        self.videoContral_container = QtWidgets.QHBoxLayout()
        self.videoContral_container.setObjectName("videoContral_container")

        #视频播放按钮
        self.play_btn = QtWidgets.QPushButton(self.centralwidget)
        self.play_btn.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.play_btn.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("images/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.play_btn.setIcon(icon3)
        self.play_btn.setObjectName("play_btn")
        self.videoContral_container.addWidget(self.play_btn)

        #视频暂停按钮
        self.pause_btn = QtWidgets.QPushButton(self.centralwidget)
        self.pause_btn.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pause_btn.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("images/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pause_btn.setIcon(icon4)
        self.pause_btn.setObjectName("pause_btn")
        self.videoContral_container.addWidget(self.pause_btn)

        #水平分隔条
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.videoContral_container.addItem(spacerItem1)

        #视频播放进度标签
        self.ratio_label = QtWidgets.QLabel(self.centralwidget)
        self.ratio_label.setMinimumSize(QtCore.QSize(80, 0))
        self.ratio_label.setMaximumSize(QtCore.QSize(20, 30))
        self.ratio_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.ratio_label.setObjectName("ratio_lab")
        self.videoContral_container.addWidget(self.ratio_label)

        #视频音量按钮
        self.sound_btn = QtWidgets.QPushButton(self.centralwidget)
        self.sound_btn.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.sound_btn.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("images/sound_on.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.sound_btn.setIcon(icon5)
        self.sound_btn.setObjectName("sound_btn")
        self.videoContral_container.addWidget(self.sound_btn)


        #视频音量滑动条
        self.volumn_slider = QtWidgets.QSlider(self.videoWidget_container)
        #滑动条样式表
        self.volumn_slider.setStyleSheet("height:5px;")
        #滑动条最大值
        self.volumn_slider.setMaximum(100)
        #设置当前值
        self.volumn_slider.setProperty("value", 25)
        #设置滑动条方向
        self.volumn_slider.setOrientation(QtCore.Qt.Vertical)
        self.volumn_slider.setObjectName("volumn_slider")
        #设置滑动条位置和大小
        self.volumn_slider.setGeometry(QtCore.QRect(self.videoWidget_container.width()+self.videoWidget_container.width()*0.096,self.videoWidget_container.height()-self.videoWidget_container.height()*0.1,30,100))



        #设置水平分割条所占比例
        self.videoContral_container.setStretch(2, 2)

        #视频播放容器加入视频播放控制容器
        self.playVideoContainer.addLayout(self.videoContral_container)
        #下方展示布局注册右侧视频播放容器
        self.showContainer.addLayout(self.playVideoContainer)
        #设置下方展示布局中左右比例
        self.showContainer.setStretch(0, 0)#0,2
        self.showContainer.setStretch(1, 10)#1,8
        #主窗口布局注册下方展示布局
        self.mainWindowLayout.addLayout(self.showContainer)

        #主窗口注册中央显示组件容器
        MainWindow.setCentralWidget(self.centralwidget)
        #组件重命名
        self.retranslateUi(MainWindow)
        #自动连接事件
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    #组件重命名
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Video Question Answering"))
        self.logo_label.setText(_translate("MainWindow", "VideoQA"))
        self.videoQA_btn.setText(_translate("MainWindow", "视频问答"))
        self.selectGoal_btn.setToolTip(_translate("MainWindow", "在视频中选取目标，对此目标进行提问"))
        self.selectGoal_btn.setText(_translate("MainWindow", "目标跟踪"))
        self.eventLocate_btn.setToolTip(_translate("MainWindow", "在视频中截取一段视频，针对此段视频进行提问"))
        self.eventLocate_btn.setText(_translate("MainWindow", "事件定位"))
        self.openFile_btn.setText(_translate("MainWindow", "选择文件"))
        self.question_label.setText(_translate("MainWindow", "问题:"))
        self.question_input.setPlaceholderText(_translate("MainWindow", "eg:what\'s your question?"))
        self.qa_btn.setText(_translate("MainWindow", "开始预测..."))
        self.answer_label.setText(_translate("MainWindow", "答案:"))
        self.currentMedia_label.setText(_translate("MainWindow", "无曲目"))
        self.ratio_label.setText(_translate("MainWindow", ""))
        self.mc_radiobtn.setText(_translate("MainWindow", "多选式问题"))
        self.oe_radiobtn.setText(_translate("MainWindow", "开放式问题"))

